{"version":3,"sources":["commonComponents/uploadDropBox.js","jsPages/fileUpload/uploadPage.js","commonComponents/fileList.js","jsPages/fileExtract/extractPage.js","jsPages/template/template.js","App.js","index.js"],"names":["FileDropBox","fileDropBox","document","getElementById","style","borderColor","backgroundColor","e","objFile","currentTarget","files","this","props","appendList","i","length","indexOf","name","message","warn","push","reader","FileReader","onload","localStorage","setItem","target","result","readAsText","success","setFiles","value","className","id","onMouseEnter","borderColorLight","onMouseLeave","borderColorDim","FileAddOutlined","BulbOutlined","type","title","multiple","onDragEnter","onDragLeave","onDrop","onChange","handleAddFile","React","Component","UploadPage","FileList","file_name","showFileContent","tempFiles","removeItem","fList","map","f","key","toString","display","width","onClick","itemClick","PaperClipOutlined","handleDelete","DeleteOutlined","ExtractPage","state","fileContent","bind","handleReset","formRef","createRef","s","getItem","split","dic","temp","setState","current","setFieldsValue","resetFields","readOnly","ref","labelCol","span","Item","label","rules","required","wrapperCol","offset","htmlType","Header","Layout","Sider","Content","MyTemplate","handleResize","height","innerHeight","toggle","collapsed","storage","curPage","window","addEventListener","page","content","trigger","collapsible","theme","mode","defaultSelectedKeys","icon","setPage","FolderOutlined","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","App","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.10bac716.chunk.js","sourcesContent":["import React from \"react\";\nimport { message } from \"antd\";\nimport { FileAddOutlined, BulbOutlined} from '@ant-design/icons';\nimport \"./uploadDropbox.css\"\n\nclass FileDropBox extends React.Component{\n    // 文件拖拽组件\n    borderColorLight(){\n        // 鼠标进入或文件拖入，组件边框及背景的响应\n        const fileDropBox = document.getElementById(\"fileDropBox\");\n        fileDropBox.style.borderColor = \"#379FFF\";\n        fileDropBox.style.backgroundColor = \"#F8F8F8\";\n    }\n    borderColorDim(){\n        // 鼠标离开或文件拖拽结束或取消文件拖拽，文件上传组件边框恢复原始状态\n        const fileDropBox = document.getElementById(\"fileDropBox\");\n        fileDropBox.style.borderColor = \"#D4D4D4\";\n        fileDropBox.style.backgroundColor = \"#FFFFFF\";\n    }\n    handleAddFile(e){\n        // 文件输入框有新文件加入\n        const objFile = e.currentTarget.files;\n        if(!objFile){\n            // 文件对象列表为空\n            return ;\n        }\n        let files = this.props.files; // 父组件传递来的文件列表\n        let appendList = []; // 记录新文件\n        for (let i=0;i<objFile.length;i++){\n            // 将文件输入框列表对象与已有文件逐一比对\n            if(files.indexOf(objFile[i].name)>-1){\n                // 文件以存在\n                message.warn(objFile[i].name+\" already exists.\");\n            }else {\n                // 文件不存在，加入新文件列表\n                appendList.push(objFile[i]);\n            }\n        }\n        for (let i=0;i<appendList.length;i++){\n            // 将新文件逐一添加到localStorage\n            files.push(appendList[i].name);\n            let reader = new FileReader();\n            reader.onload = e => {\n                // 读文件\n                localStorage.setItem(appendList[i].name, e.target.result);\n            };\n            reader.readAsText(appendList[i],'gb2312');\n            message.success(appendList[i].name+\" has been added.\");\n        }\n        this.props.setFiles(files); // 更新父组件文件名列表\n        e.target.value = []; // 清空文件输入框\n    }\n    render() {\n        return  (\n            <div className={\"fileDropBox\"} id={\"fileDropBox\"}\n                 onMouseEnter={() => this.borderColorLight()}\n                 onMouseLeave={() => this.borderColorDim()}>\n                <span className=\"uploadDragIcon\"><FileAddOutlined /></span>\n                <span className=\"uploadTips\"><BulbOutlined /> &nbsp;Click or drag file to this area to upload</span>\n                <input type={\"file\"} id={\"fileInput\"} title={\"\"} multiple={true}\n                       onDragEnter={() => this.borderColorLight()}\n                       onDragLeave={() => this.borderColorDim()}\n                       onDrop={() => this.borderColorDim()}\n                       onChange={(e) => this.handleAddFile(e)}/>\n            </div>\n        );\n    }\n}\n\nexport default FileDropBox;","import React from \"react\";\nimport FileDropBox from \"../../commonComponents/uploadDropBox\";\n\n\nclass UploadPage extends React.Component{\n    render() {\n        return (\n            <FileDropBox files={this.props.files} setFiles={this.props.setFiles}/>\n        );\n    }\n}\n\nexport default UploadPage;","import React from \"react\";\nimport { DeleteOutlined, PaperClipOutlined } from '@ant-design/icons';\nimport { message } from \"antd\";\nimport \"./fileList.css\"\n\nclass FileList extends React.Component{\n    // 文件列表组件\n    itemClick(file_name){\n        // 列表元素点击事件\n        this.props.showFileContent(file_name);\n    };\n    handleDelete(file_name){\n        // 删除图标点击事件\n        let tempFiles = []; // 记录不删除的文件名\n        for(let i=0;i<this.props.files.length;i++){\n            if(this.props.files[i]!==file_name){\n                // 文件名不是当前眼删除的文件名，记录到tempFiles\n                tempFiles.push(this.props.files[i]);\n            }\n        }\n        this.props.setFiles(tempFiles); // 向父组件返回删除后的文件名列表\n        localStorage.removeItem(file_name); // 删除localStorage中文件名对应的记录\n        message.success(file_name+\" has been deleted.\");\n    }\n    render() {\n        const fList = this.props.files.map(f => {\n            // 将文件名映射成列表元素\n            return (\n                <li key={f.toString()}>\n                    <span style={{display: \"inline-block\", width: \"80%\"}} onClick={() => this.itemClick(f)}>\n                        <span><PaperClipOutlined /></span>\n                        <span className={\"fName\"}>{f}</span>\n                    </span>\n                    <span className={\"fDelIcon\"} onClick={() => this.handleDelete(f)}><DeleteOutlined /></span>\n                </li>\n            );\n        });\n        return (\n            // 组件返回完成文件名映射的ul\n            <ul className={\"fUl\"}>\n                {fList}\n            </ul>\n        );\n    }\n}\n\nexport default FileList;","import React from \"react\";\nimport FileList from \"../../commonComponents/fileList\";\nimport \"./extractPage.css\"\nimport { Form, Input, Button} from \"antd\"\n\n\nclass ExtractPage extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            fileContent: \"\",\n        };\n        this.showFileContent = this.showFileContent.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n        this.formRef = React.createRef();\n    }\n    showFileContent(file_name){\n        const s = localStorage.getItem(file_name).split('\\n');\n        let dic = {};\n        for(let i=0;i<s.length;i++){\n            const temp = s[i].split(':');\n            dic[temp[0]] = temp[1];\n        }\n        this.setState({\n            fileContent: localStorage.getItem(file_name),\n        });\n        this.formRef.current.setFieldsValue(dic);\n    }\n    handleReset(){\n        this.formRef.current.resetFields();\n    }\n    render() {\n        return (\n            <div className={\"extractPageComponent\"}>\n                <div className={\"extractLeft\"}>\n                    <div className={\"listTitle\"}>\n                        <span>File List</span>\n                    </div>\n                    <FileList files={this.props.files}\n                              setFiles={this.props.setFiles}\n                              showFileContent={this.showFileContent}/>\n                </div>\n                <div className={\"extractRight\"}>\n                    <div className={\"extractTop\"}>\n                        <textarea id={\"fileContent\"} value={this.state.fileContent||\"\"} readOnly={true} />\n                    </div>\n                    <div className={\"extractBottom\"}>\n                        <div className={\"infoFormBox\"}>\n                            <Form ref={this.formRef} labelCol={{span:6}}>\n                                <Form.Item name={\"Name\"} label={\"Name\"} rules={[{required: true}]}>\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item name={\"Age\"} label={\"Age\"} rules={[{required: true}]}>\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item name={\"Tel\"} label={\"Tel\"} rules={[{required: true}]}>\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item name={\"Email\"} label={\"Email\"} rules={[{required: true}]}>\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item name={\"City\"} label={\"City\"} rules={[{required: true}]}>\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item name={\"Intention\"} label={\"Intention\"} rules={[{required: true}]}>\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item wrapperCol={{offset: 12,span: 16,}}>\n                                    <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n                                    <Button htmlType=\"button\" onClick={this.handleReset}>Reset</Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default  ExtractPage;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './template.css';\nimport { Layout, Menu } from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    FileAddOutlined,\n    FolderOutlined,\n} from '@ant-design/icons';\nimport UploadPage from \"../fileUpload/uploadPage\";\nimport ExtractPage from \"../fileExtract/extractPage\";\n\nconst { Header, Sider, Content } = Layout;\n\nclass MyTemplate extends React.Component {\n    constructor(props) {\n        super(props);\n        let storage = []; //读取localstorage初始文件\n        for(let i=0;i<localStorage.length;i++){\n            storage.push(localStorage.key(i));\n        }\n        this.state = {\n            collapsed: false,\n            curPage: \"upload\",\n            files: storage,\n            height: window.innerHeight,\n        };\n        this.setFiles = this.setFiles.bind(this);\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize.bind(this));\n    }\n    handleResize = e => {\n        this.setState({\n            height: e.target.innerHeight,\n        });\n    };\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n    setPage(page){\n        this.setState({\n            curPage: page,\n        });\n    }\n    setFiles(files){\n        this.setState({\n            files: files,\n        });\n    }\n    render() {\n        let content;\n        switch (this.state.curPage) {\n            case \"upload\": content = <UploadPage files={this.state.files} setFiles={this.setFiles}/>;break;\n            case \"extract\": content = <ExtractPage files={this.state.files} setFiles={this.setFiles}/>;break;\n            default:\n        }\n        return (\n            <Layout>\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                        <Menu.Item key=\"1\" icon={<FileAddOutlined />} onClick={()=>this.setPage(\"upload\")}>\n                            Add new files\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<FolderOutlined />} onClick={()=>this.setPage(\"extract\")}>\n                            My files\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n                <Layout className=\"site-layout\">\n                    <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n                        {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                            className: 'trigger',\n                            onClick: this.toggle,\n                        })}\n                    </Header>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            margin: '24px 16px',\n                            padding: 24,\n                            minHeight: this.state.height-115,\n                        }}\n                    >\n                        {content}\n                    </Content>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nexport default MyTemplate;","import React from 'react';\nimport './App.css';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport MyTemplate from \"./jsPages/template/template\";\n//import Test from \"./tests/test\";\n\nfunction App() {\n    return (\n        <Router>\n            <div>\n                <Route exact path={\"/\"} component={MyTemplate}/>\n                {/*<Route path={'/test'} component={Test}/>*/}\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport APP from \"./App\";\n\nReactDOM.render(\n    <APP />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}